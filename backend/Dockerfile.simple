# Warp Mobile AI IDE - Simplified Development Environment
# Versione semplificata per testing locale rapido

FROM node:20-bullseye

LABEL maintainer="Warp Mobile AI IDE"
LABEL description="Simplified development environment for local testing"
LABEL version="1.0-simple"

ENV DEBIAN_FRONTEND=noninteractive
ENV TERM=xterm-256color
ENV SHELL=/bin/bash

# Sistema di base
RUN apt-get update && apt-get install -y \
    # Build essentials
    build-essential \
    curl \
    wget \
    git \
    vim \
    nano \
    # File management
    unzip \
    zip \
    tree \
    # Process management
    htop \
    # Development tools
    jq \
    # Python
    python3 \
    python3-pip \
    python3-venv \
    # Other essentials
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Global npm packages (essenziali) - evita conflitti
RUN npm install -g \
    serve \
    live-server \
    http-server \
    nodemon \
    typescript \
    ts-node

# Python packages (essenziali)
RUN pip3 install --upgrade pip && pip3 install \
    # Web frameworks
    flask \
    fastapi \
    uvicorn \
    # Development tools
    requests \
    # Jupyter for data science
    jupyter \
    notebook

# Note: Flutter removed for faster testing build
# Can be added back for production

# Git configuration
RUN git config --global init.defaultBranch main \
    && git config --global color.ui auto \
    && git config --global core.editor nano

# Workspace setup
WORKDIR /workspace
RUN mkdir -p /workspace/{projects,temp}

# Bash configuration
RUN echo 'export PS1="\[\033[01;32m\]warp-dev\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ "' >> /root/.bashrc \
    && echo 'alias ll="ls -alF"' >> /root/.bashrc \
    && echo 'alias gs="git status"' >> /root/.bashrc \
    && echo 'alias gd="git diff"' >> /root/.bashrc

# Welcome message
RUN echo 'echo "ðŸš€ Welcome to Warp Mobile AI IDE (Testing Version)!"' >> /root/.bashrc \
    && echo 'echo "ðŸ“¦ Available: Node.js, Python, TypeScript, Jupyter"' >> /root/.bashrc \
    && echo 'echo "ðŸ’¡ Try: npx create-react-app my-app, python -m http.server 8000"' >> /root/.bashrc \
    && echo 'echo ""' >> /root/.bashrc

# Expose common ports
EXPOSE 3000 3001 5000 8000 8080 8888

# Keep container running
CMD ["/bin/bash", "-l"]